#!/usr/bin/env ruby

require "thor"
require "highline/import"

require_relative "../lib/cheetahmail"

class CheetahMailApp < Thor
  class_option :username, required: true, aliases: "u"
  class_option :password, required: true, aliases: "p"

  desc "segment", "Download a segment"
  method_option :segment
  def segment
    login

    segmentation = CheetahMail::Segmentation.new

    to_download = nil

    if options[:segment]
      to_download = segmentation.segments.find { |s| s.name == options[:segment] }
    else
      choose do |menu|
        menu.prompt = "Choose a segment to download: "

        segmentation.segments.each do |segment|
          menu.choice("#{segment.name} (ID: #{segment.id})") { to_download = segment }
        end
      end
    end

    if to_download
      to_download.download
      puts to_download.filename
    else
      $stderr.puts "That segment doesn't seem to exist."
      exit 1
    end
  end

  no_commands do
    def login
      login = CheetahMail::Login.new
      login.call(username: options[:username], password: options[:password])
    end
  end
end

CheetahMailApp.start

